#!/bin/bash 
#set -x

############################################################################
# Script to play a Shofar blast for the start of Shabbat among other things
#
# Depends:	libhdate 1.4.20-4
#		at, sed. mpg123, aumix
#
#  See Shabbat 35b for shofar blast times and types
#



##### Constants

lat=44.786	#44.786 l
long=-85.042	#85.042 L  @#$@#$ changes from a + number to - number with hdate 1.4.20-4
tz="$( date +%:::z )"
day=()  # should be the numerical value of the day
month=()
year=()
Day=()  # should be the abreviated name of the day as in Mon
havdalah=()

##### Functions

# Not currently used and maybe this one and the next should be combined into a single function

#function Long
#{
  # longitude for Kalkaska, MI.  At some point we will make this interactive to pull the gps cordinates off a website per your current address, or set through a config file.  -L
#  -85.042
#}

# Not currently used

#function Lat
#{
  # latitude for Kalkaska, MI.  At some point we will make this interactive to pull the gps cordinates off a website per your current address, or set through a config file.  -l
#  44.786
#}

# Not currently used

#function Tz
#{
  # time zone for Kalkaska, MI.  At some point we will make this interactive using the gps cordinnates to determine what the time should be or set through a config file.
#  -5
#}

# pretty sure this is a useless function

function Day_of_week #set the day of the week
{
Day="$( date +%a )"
     if [[ "$Day" != "Fri" ]]; then
          Day="$( date -d "next fri" +%a )"
     fi
}

function Set_date
{
  # Get the current date and set the the variables day, month, year.
read Day day month year <<<"$( date +"%a %d %m %Y" )"
#echo "$Day"
#exit
  if [[ "Fri" != "$Day" ]]; then
    read day month year <<<"$( date +"%d %m %Y" -d "next Fri" )"
    Day=Fri
  fi
}

function Set_shabbat
{

# Will need to be made aware that hdate has been made sundown aware

day="$(date -d "next sat" +%d)"
}

function Torah_reading {
Set_shabbat
parsha="$(hdate -r $day $month $year)"

# Add an audio section to play a recording of the actual reading at a specific time (to be determined) on Shabbat.

echo "The Parsha for "$parsha""
}

  function Havdalah
{
  havdalah="$(hdate -c -L$long -l$lat -z$tz $day $month $year)"
  echo "Havdalah time for; "$havdalah""
}

function Candle_time
{
  Time="$(hdate -c -L$long -l$lat -z$tz $day $month $year)"
  echo "Candle lighting time for; "$Time""
}

function Shofar
{

#Day_of_week # not sure why I had this in here it's not used.

# need to make a test to see if the shofar blast is already set.
# need to pause or cancel any other sound apps before the shofar and then restart them after.
# need to determine the proper combination of the three different shofar blasts to use when called.
# Will probably require a table/list.
# need to separate shofar from being Shabbat specific

cTime="$(hdate -c -L$long -l$lat -z$tz $day $month $year | grep -e '(.' | cut -d " " -f2 | sed 's/[()]//g')"
at "$cTime" "$month/$day/$year" -f "$HOME"/bin/shabbat/data/shofar
}

# Not currently used

#function Yom_tove 	# Festival
#{
## test date for Yom Tove
#
#}

# Not currently used

#function Yom_tove_reading
#{
## need to build a table/list of Yom Tove readings
#
#}

# Not currently used

#function Rosh_chodesh		# New Moon
#{
## test date for Rosh Chodesh
#
#}

# Not currently used

#function Count_omer	# count fifty days between Passover and Shavuot
#{
## count the Omer 
# must count both seven weeks and fifty days so there are actually two countings.
# play reminder to count the Omer morning & evening
# play an audio file containing the blessing and the actual count
#}

# Not currently used

#function Radio
#{
#rTime="$(hdate -c -L$long -l$lat -z$tz $day $month $year | grep -e '(.' | cut -d " " -f2 | sed #'s/[()]//g')"

# need to determine what is the best time to start the radio.
#mpg123 http://216.118.106.247:7000
#}


###### Main
clear
Set_date
  if [ "$Day" == "Fri" ]; then 
    Candle_time
    Shofar
    Torah_reading
  fi
Havdalah
Shofar
#Radio


